/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import GUI.Models.NameSpaceTableModel;
import java.awt.Frame;
import java.util.ArrayList;
import java.util.Random;
import java.util.TreeSet;
import javax.swing.table.TableModel;
import xmlgenerator.NameSpace;

/**
 *
 * @author Anatoly
 */
public class NameSpaceDialog extends javax.swing.JDialog {

    /**
     * Creates new form NameSpaceDialog
     */
    public NameSpaceDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        nameSpace = new NameSpace();
        setLocationRelativeTo(null);
    }
    public NameSpaceDialog(java.awt.Frame parent, boolean modal, NameSpace ns) {
        super(parent, modal);
        myTableModel = new NameSpaceTableModel(ns);
        initComponents();
        nameSpace = ns;
        nameSetTextField.setText(ns.getSetName());
        jTable1.setModel(myTableModel);
        newnsCreating = false;
        setLocationRelativeTo(null);
    }
    private boolean newnsCreating = true;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        nsNameLabel = new javax.swing.JLabel();
        nameSetTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        randNameCountTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        regularExpressionTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTable1.setModel(myTableModel);
        jScrollPane1.setViewportView(jTable1);

        nsNameLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        nsNameLabel.setText("Множество имен");

        jLabel1.setText("Название множества:");

        jButton1.setText("-");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("+");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Сохранить");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Добавить");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        randNameCountTextField.setText("50");

        jLabel2.setText("Количество случайных имен:");

        jLabel3.setText("Регулярное выражение для генерации:");

        regularExpressionTextField.setText("%setName%_%id%");

        jLabel4.setText("Используемые подстановки: %setName%, %id%, %digit%, %*%, %?%");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(nsNameLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameSetTextField))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(randNameCountTextField)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 175, Short.MAX_VALUE)
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 110, Short.MAX_VALUE)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1))
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(regularExpressionTextField)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nsNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameSetTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(regularExpressionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jLabel2)
                    .addComponent(randNameCountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(7, 7, 7))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private ArrayList<String> toRem = new ArrayList<>();
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int rowIndex = jTable1.getSelectedRow();
        if (rowIndex > -1){
            String s = (String) jTable1.getValueAt(rowIndex, 0);
            toRem.add(s);
            myTableModel.removeRow(rowIndex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        myTableModel.addRow();
    }//GEN-LAST:event_jButton2ActionPerformed

    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String nsName = nameSetTextField.getText().trim();
        if (nsName.isEmpty()){
            ErrorDialog.showErrorDialog("Ошибка!", "Пустое имя словаря!");
            return;
        }
        nameSpace.setSetName(nsName);
        for (String s: toRem)
            nameSpace.getNameSet().remove(s);
        for (int i = 0; i < jTable1.getRowCount(); i++){
            String s = (String) jTable1.getValueAt(i, 0);
            s = s.trim();
            if (s.isEmpty()){
                ErrorDialog.showErrorDialog("Пустая строка!", "Пустая строка №"+String.valueOf(i+1)+" пропущена!");
                continue;
            }
            if (!nameSpace.contains(s))
                nameSpace.addName(s.trim());
        }
        dispose();
        setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private int counter = 0;
    private String setName = new String();
    
    private static TreeSet<String> tableLinesSet = new TreeSet<>();
    private void fillTableLinesSet(){
        for (int i = 0; i < jTable1.getRowCount(); i++){
            String s = ((String) jTable1.getValueAt(i, 0)).trim();
            if (!s.isEmpty())
                tableLinesSet.add(s);
        }
    }
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        setName = nameSetTextField.getText().trim();
        if (setName.isEmpty()){
            ErrorDialog.showErrorDialog("Ошибка!", "Пустое имя словаря!");
            return;
        }
        String randCount = randNameCountTextField.getText().trim();
        setName = nameSetTextField.getText().trim();
        int count = 0;
        try{count = Integer.valueOf(randCount.trim());}
        catch(NumberFormatException exc){}
        if (count < 1){
            ErrorDialog.showErrorDialog("Ошибка!", "Некорректное количество генерируемых имен!");
            return;
        }
        String regularExpression = regularExpressionTextField.getText().trim();
        if (regularExpression.isEmpty()){
            ErrorDialog.showErrorDialog("Ошибка!", "Не введено регулярное выражение!");
            return;
        }
        
        fillTableLinesSet();
        int tryCount;
        for (counter = 0; counter < count; counter++){
            tryCount = 100;
            String randStr = getStrByRegularExpression(regularExpression);
            while (tableLinesSet.contains(randStr) && tryCount >= 0 ){
                randStr = getStrByRegularExpression(regularExpression);
                tryCount--;
            }
            if (tryCount == -1){
                ErrorDialog.showErrorDialog("Генерация прервана","Не удалось сгенерировать необходимое количество уникальных имен");
                tableLinesSet.clear();
                return;
            }
            Object [] row = {randStr};
            myTableModel.addRow(row);
            tableLinesSet.add(randStr);
        }
        tableLinesSet.clear();
    }//GEN-LAST:event_jButton4ActionPerformed
    private String getStrByRegularExpression(String regExpr){
        String rtrn = regExpr+"";
        rtrn = rtrn.replaceAll("%setName%", setName);
        rtrn = rtrn.replaceAll("%id%", String.valueOf(counter));
        String parseResult = new String();
        String s = new String();
        boolean regExprAtomIsStarted = false;
        for (int i = 0; i < rtrn.length(); i++){
            if (rtrn.charAt(i) == '%'){
                s += rtrn.charAt(i);
                regExprAtomIsStarted = !regExprAtomIsStarted;
                if (!regExprAtomIsStarted){
                    parseResult += getValueByAtomRegEx(s);
                    s = "";
                }
            }
            else if (regExprAtomIsStarted)
                s += rtrn.charAt(i);
            else 
                parseResult += rtrn.charAt(i);
        }
        parseResult+=s;
        return parseResult;
    }
    
    //нужна для проверки уникальности генерируемых имен, но пока заглушка
    private TreeSet<String> actualNamesInTable = new TreeSet<>();
    private boolean tableContentsThisStr(String s){
        return actualNamesInTable.contains(s);
    }
    public static String getValueByAtomRegEx(String s){
        if (s.equals("%digit%"))
            return String.valueOf(random.nextInt(10));
        int number = random.nextInt(mCHAR.length());
        char ch = mCHAR.charAt(number);
        switch (s) {
            case "%?%":
                return ""+ch;
            case "%*%":
                if (random.nextInt(20)!=0)
                    return ""+ch;
                else
                    return "";
        }
        return s;
    }
    private static final String mCHAR = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
    private static final int STR_LENGTH = 10;
    private static Random random = new Random();
    public String createRandomString() {
    StringBuilder builder = new StringBuilder();
    for (int i = 0; i < STR_LENGTH; i++) {
        int number = random.nextInt(mCHAR.length());
        char ch = mCHAR.charAt(number);
        builder.append(ch);
    }
    return builder.toString();
}
    /**
     * @param args the command line arguments
     */
    private NameSpace nameSpace = new NameSpace();
    public NameSpace getNS(){ return nameSpace;}
    private NameSpaceTableModel myTableModel = new NameSpaceTableModel();
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NameSpaceDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NameSpaceDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NameSpaceDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NameSpaceDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NameSpaceDialog dialog = new NameSpaceDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField nameSetTextField;
    private javax.swing.JLabel nsNameLabel;
    private javax.swing.JTextField randNameCountTextField;
    private javax.swing.JTextField regularExpressionTextField;
    // End of variables declaration//GEN-END:variables
}
